<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ccri.stealth</groupId>
    <artifactId>stealth</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <scalatra.version>2.2.0</scalatra.version>
        <slf4j.version>1.7.2</slf4j.version>
        <spray-json.version>1.2.3</spray-json.version>
        <scala.version>2.10.0</scala.version>
        <joda-time.version>2.1</joda-time.version>
        <joda-convert.version>1.2</joda-convert.version>
        <guava.version>14.0.1</guava.version>
        <jsr305.version>1.3.9</jsr305.version>
        <uidir.pathname>${project.basedir}/src/main/ui</uidir.pathname>

        <basemap.url>http://localhost:8081/geoserver/wms</basemap.url>
        <baselayers>nurc:Img_Sample</baselayers>
        <!--basemap.url>http://dgeo:8080/geoserver/wms</basemap.url>
        <baselayers>mapproxy:globe.osm.toner</baselayers-->
        <basemap.format>image/png</basemap.format>
        <basemap.transparent>true</basemap.transparent>
        <basemap.crs>EPSG:4326</basemap.crs>
        <basemap.centerLat>37.76</basemap.centerLat>
        <basemap.centerLon>-122.45</basemap.centerLon>
        <basemap.defaultZoom>6</basemap.defaultZoom>
        <basemap.minZoom>0</basemap.minZoom>
        <basemap.maxZoom>15</basemap.maxZoom>
    </properties>

    <profiles>
        <profile>
            <id>unpack-ui</id>
            <activation>
                <property>
                    <name>!skip-unpack</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>extract-js-dependencies</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <outputDirectory>src/main/ui</outputDirectory>
                                            <groupId>com.ccri.stealth</groupId>
                                            <artifactId>stealth</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                            <classifier>npm</classifier>
                                        </artifactItem>
                                        <artifactItem>
                                            <outputDirectory>src/main/ui/vendor</outputDirectory>
                                            <groupId>com.ccri.stealth</groupId>
                                            <artifactId>stealth</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                            <classifier>bower</classifier>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pack-ui</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/npm.xml</descriptor>
                                <descriptor>src/main/assembly/bower.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-npm.zip</file>
                                            <type>zip</type>
                                            <classifier>npm</classifier>
                                        </artifact>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-bower.zip</file>
                                            <type>zip</type>
                                            <classifier>bower</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>npm-bower-prune</id>
                                <phase>clean</phase>
                                <configuration>
                                    <target>
                                        <echo>${project.basedir}
                                            ---------------------------------------------------
                                            -- NPM PRUNE --
                                            ---------------------------------------------------
                                        </echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c npm prune"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c 'npm prune'"/>
                                        </exec>
                                        <echo>${project.basedir}
                                            ---------------------------------------------------
                                            -- BOWER PRUNE --
                                            ---------------------------------------------------
                                        </echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c bower prune"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c 'bower prune'"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>npm-bower-install</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <echo>${project.basedir}
                                            ---------------------------------------------------
                                            -- NPM INSTALL --
                                            ---------------------------------------------------
                                        </echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c npm install"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c 'npm install'"/>
                                        </exec>
                                        <echo>${project.basedir}
                                            ---------------------------------------------------
                                            -- BOWER INSTALL --
                                            ---------------------------------------------------
                                        </echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c bower install"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c 'bower install'"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- start 'grunt watch' with 'mvn validate -Pgrunt-watch' -->
            <id>grunt-watch</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>grunt-watch</id>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <echo>${project.basedir}
                                            ---------------------------------------------------
                                            -- GRUNT WATCH --
                                            ---------------------------------------------------
                                        </echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows">
                                            <arg line="/c grunt watch --buildDir=../../../target/${project.artifactId}-${project.version}"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix">
                                            <arg line="-c 'grunt watch --buildDir=../../../target/${project.artifactId}-${project.version}'"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filter</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>prepare-war</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.0.0.M4</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webApp>
                        <contextPath>/stealth</contextPath>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>${project.basedir}/src/main/webapp,${project.build.directory}/${project.artifactId}-${project.version}</resourcesAsCSV>
                        </baseResource>
                        <maxFormContentSize>500000</maxFormContentSize>
                        <jettyEnvXml>${project.build.outputDirectory}/jetty-env.xml</jettyEnvXml>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>compile-scala</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile-scala</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>grunt-build</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <echo>${project.basedir}
                                    ---------------------------------------------------
                                    -- GRUNT --
                                    ---------------------------------------------------
                                </echo>
                                <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows"
                                      resultproperty="cmdresult">
                                    <arg line="/c grunt --buildDir=../../../target/${project.artifactId}-${project.version}"/>
                                </exec>
                                <exec executable="bash" dir="${uidir.pathname}" osfamily="unix"
                                      resultproperty="cmdresult">
                                    <arg line="-c 'grunt --buildDir=../../../target/${project.artifactId}-${project.version}'"/>
                                </exec>

                                <condition property="cmdsuccess">
                                    <equals arg1="${cmdresult}" arg2="0"/>
                                </condition>
                                <fail unless="cmdsuccess"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-json_2.10</artifactId>
            <version>${spray-json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra_2.10</artifactId>
            <version>${scalatra.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-scalate_2.10</artifactId>
            <version>${scalatra.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
            <version>${joda-convert.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>
</project>