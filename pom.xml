<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ccri.stealth</groupId>
    <artifactId>stealth</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <!--
        Available profiles:
        install-nodejs
            Fetch nodejs from artifactory and unpack.  Only has to be run once initially
            and subsequently whenever the nodejs version needs to be changed.
        unpack-ui
            Fetch UI dependency zips from artifactory and unpack.  Only has to be run once initially
            and subsequently after dependency changes have been deployed to artifactory.
        pack-ui
            Download UI dependencies from internet and package as zips.  Must be online.
            Run when you modify package.json or bower.json deps.
            Also, run by CI to deploy zips to artifactory.
    -->

    <properties>
        <scalatra.version>2.2.0</scalatra.version>
        <slf4j.version>1.7.2</slf4j.version>
        <spray-json.version>1.2.3</spray-json.version>
        <scala.version>2.10.0</scala.version>
        <uidir.pathname>${project.basedir}/src/main/ui</uidir.pathname>

        <nodejs.local.dir>${uidir.pathname}/nodejs</nodejs.local.dir>
        <nodejs.version>v0.10.28</nodejs.version>
        <nodejs.classifier>INVALID</nodejs.classifier>
        <phantomjs.local.dir>${uidir.pathname}/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib/phantom</phantomjs.local.dir>
        <phantomjs.version>1.9.7</phantomjs.version>
        <phantomjs.classifier>INVALID</phantomjs.classifier>

        <geoserver.url>http://localhost:8081/geoserver</geoserver.url>
        <openlayers.proxy>cors/</openlayers.proxy>
        <openlayers.imagepath>vendor/bower/openlayers/img/</openlayers.imagepath>
        <basemap.url>http://dgeo:8080/geoserver/wms</basemap.url>
        <basemap.layers>mapproxy:globe.osm.toner</basemap.layers>
        <basemap.format>image/png</basemap.format>
        <basemap.crs>EPSG:4326</basemap.crs>
        <basemap.defaultLat>0</basemap.defaultLat>
        <basemap.defaultLon>0</basemap.defaultLon>
        <basemap.defaultZoom>1</basemap.defaultZoom>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources-filter</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/non-packaged-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/non-packaged-resources-filter</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>prepare-war</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.15.v20140411</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webApp>
                        <contextPath>/stealth</contextPath>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>${project.basedir}/src/main/webapp,${project.build.directory}/${project.artifactId}-${project.version}</resourcesAsCSV>
                        </baseResource>
                        <maxFormContentSize>500000</maxFormContentSize>
                        <jettyEnvXml>${project.build.outputDirectory}/jetty-env.xml</jettyEnvXml>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.6</version>
                <executions>
                    <execution>
                        <id>compile-scala</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile-scala</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>grunt-build</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <echo>**** GRUNT ****</echo>
                                <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows"
                                      resultproperty="cmdresult">
                                    <arg line="/c node.exe ${uidir.pathname}/node_modules/grunt-cli/bin/grunt --force"/>
                                </exec>
                                <exec executable="bash" dir="${uidir.pathname}" osfamily="unix"
                                      resultproperty="cmdresult">
                                    <arg line="-c '${nodejs.local.dir}/bin/node ${uidir.pathname}/node_modules/grunt-cli/bin/grunt'"/>
                                </exec>

                                <condition property="cmdsuccess">
                                    <equals arg1="${cmdresult}" arg2="0"/>
                                </condition>
                                <fail unless="cmdsuccess"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>io.spray</groupId>
            <artifactId>spray-json_2.10</artifactId>
            <version>${spray-json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra_2.10</artifactId>
            <version>${scalatra.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-scalate_2.10</artifactId>
            <version>${scalatra.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>8.1.15.v20140411</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.ccri.stealth</groupId>
                <artifactId>stealth</artifactId>
                <version>${project.version}</version>
                <classifier>npm</classifier>
                <type>zip</type>
            </dependency>
            <dependency>
                <groupId>com.ccri.stealth</groupId>
                <artifactId>stealth</artifactId>
                <version>${project.version}</version>
                <classifier>bower</classifier>
                <type>zip</type>
            </dependency>
            <dependency>
                <groupId>nodejs</groupId>
                <artifactId>node</artifactId>
                <version>${nodejs.version}</version>
                <classifier>${nodejs.classifier}</classifier>
                <type>zip</type>
            </dependency>
            <dependency>
                <groupId>phantomjs</groupId>
                <artifactId>phantomjs</artifactId>
                <version>${phantomjs.version}</version>
                <classifier>${phantomjs.classifier}</classifier>
                <type>zip</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>install-nodejs</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${nodejs.local.dir}</directory>
                                </fileset>
                                <fileset>
                                    <directory>${uidir.pathname}</directory>
                                    <includes>
                                        <include>node.exe</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>extract-nodejs</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <outputDirectory>${uidir.pathname}</outputDirectory>
                                            <groupId>nodejs</groupId>
                                            <artifactId>node</artifactId>
                                            <classifier>${nodejs.classifier}</classifier>
                                            <type>zip</type>
                                            <includes>node-v*/**</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>nodejs-rename</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <move file="${uidir.pathname}/node-${nodejs.version}-${nodejs.classifier}" tofile="${nodejs.local.dir}"/>
                                        <chmod dir="${nodejs.local.dir}" includes="**/bin/*" perm="755" />
                                        <copy file="${nodejs.local.dir}/node.exe" tofile="${uidir.pathname}/node.exe" overwrite="true" failonerror="false"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pack-ui</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/ui/node_modules</directory>
                                </fileset>
                                <fileset>
                                    <directory>src/main/ui/vendor/bower</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/npm.xml</descriptor>
                                <descriptor>src/main/assembly/bower.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-npm.zip</file>
                                            <type>zip</type>
                                            <classifier>npm</classifier>
                                        </artifact>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-bower.zip</file>
                                            <type>zip</type>
                                            <classifier>bower</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>npm-bower-install</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <echo>**** NPM INSTALL ****</echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c ${uidir.pathname}/nodejs/npm.cmd install"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c '${nodejs.local.dir}/bin/node ${nodejs.local.dir}/lib/node_modules/npm/bin/npm-cli.js install'"/>
                                        </exec>
                                        <echo>**** BOWER INSTALL ****</echo>
                                        <exec executable="cmd" dir="${uidir.pathname}" osfamily="windows" failonerror="true">
                                            <arg line="/c node.exe ${uidir.pathname}/node_modules/bower/bin/bower install"/>
                                        </exec>
                                        <exec executable="bash" dir="${uidir.pathname}" osfamily="unix" failonerror="true">
                                            <arg line="-c '${nodejs.local.dir}/bin/node ${uidir.pathname}/node_modules/bower/bin/bower install'"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>unpack-ui</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.5</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/ui/node_modules</directory>
                                </fileset>
                                <fileset>
                                    <directory>src/main/ui/vendor/bower</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>extract-js-dependencies</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <outputDirectory>src/main/ui</outputDirectory>
                                            <groupId>com.ccri.stealth</groupId>
                                            <artifactId>stealth</artifactId>
                                            <classifier>npm</classifier>
                                            <type>zip</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <outputDirectory>src/main/ui/vendor</outputDirectory>
                                            <groupId>com.ccri.stealth</groupId>
                                            <artifactId>stealth</artifactId>
                                            <classifier>bower</classifier>
                                            <type>zip</type>
                                        </artifactItem>
                                        <artifactItem>
                                            <outputDirectory>${uidir.pathname}/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib</outputDirectory>
                                            <groupId>phantomjs</groupId>
                                            <artifactId>phantomjs</artifactId>
                                            <classifier>${phantomjs.classifier}</classifier>
                                            <type>zip</type>
                                            <includes>phantomjs-*/**</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>phantomjs-rename</id>
                                <phase>process-resources</phase>
                                <configuration>
                                    <target>
                                        <move file="${uidir.pathname}/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib/phantomjs-${phantomjs.version}-${phantomjs.classifier}" tofile="${phantomjs.local.dir}"/>
                                        <chmod dir="${uidir.pathname}/node_modules" includes="**/bin/*" perm="755" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- The remaining profiles are auto-activated based on OS.  No reason to explicitly activate them. -->
        <profile>
            <id>macos-x86</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>darwin-x86</nodejs.classifier>
                <phantomjs.classifier>macosx</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>macos-x64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>darwin-x64</nodejs.classifier>
                <phantomjs.classifier>macosx</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>win-x86</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>win-x86</nodejs.classifier>
                <phantomjs.classifier>windows</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>win-x64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>win-x64</nodejs.classifier>
                <phantomjs.classifier>windows</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x86</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x86</nodejs.classifier>
                <phantomjs.classifier>linux-x86_64</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x86-386</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x86</nodejs.classifier>
                <phantomjs.classifier>linux-i686</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x86-686</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>i686</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x86</nodejs.classifier>
                <phantomjs.classifier>linux-i686</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x64-x86_64</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x64</nodejs.classifier>
                <phantomjs.classifier>linux-x86_64</phantomjs.classifier>
            </properties>
        </profile>
        <profile>
            <id>linux-x64-amd64</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <nodejs.classifier>linux-x64</nodejs.classifier>
                <phantomjs.classifier>linux-x86_64</phantomjs.classifier>
            </properties>
        </profile>
    </profiles>
</project>
